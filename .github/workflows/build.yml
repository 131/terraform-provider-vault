name: Build

on:
  push:
    paths-ignore:
      - 'website/**'
      - 'CHANGELOG.md'
  workflow_dispatch:

permissions:
  # Permission for checking out code
  contents: read

jobs:
  go-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go-version.outputs.version }}
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - id: go-version
        run: echo "version=$(cat .go-version)" >> "$GITHUB_OUTPUT"
  build:
    needs: [go-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: '.go-version'
          cache: false
      # setup-terraform is used to install the Terraform CLI. If we don't do
      # this then the terraform-plugin-sdk will attempt to download it for each test!
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.7.*'
          terraform_wrapper: false

      - name: Cache go build
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Build
        run: |
          make build
      - name: Run unit tests
        # here to short-circuit the acceptance tests, in the case of a failure.
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          make test
